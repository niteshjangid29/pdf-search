services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    environment:
      - DATABASE_URL="postgresql://user:password@db:5432/dbname"
      - JWT_SECRET="fdsfneahuw324234ggafergvjndsncwei38aqovzje2uf"
      - EXPIRY_TIME=60
      - ES_HOST="http://elasticsearch:9200"
      - ES_API_KEY="M0JKVzBwZ0JIdnFXaFR0ZnpfZEk6WEZIUTAzU0NLb3p5Rzl3ejkwVkJxdw=="
      - INDEX_NAME="pdf_documents"
    depends_on:
      db:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    networks:
      - app-network

  db:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=dbname
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    ports:
      - "9201:9200"
      - "9301:9300"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true 
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD} # Set a password for the 'elastic' superuser
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    volumes:
      - es-data:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: ["CMD-SHELL", "curl -s -f -u elastic:${ELASTIC_PASSWORD} http://localhost:9200/_cluster/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

volumes:
  db-data:
  es-data:

networks:
  app-network:
    driver: bridge
